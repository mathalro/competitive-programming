#include <bits/stdc++.h>
#define maxn 10000

using namespace std;

vector<int> canhota[maxn];
vector<int> destra[maxn];

int calculaCentralCanhota() {
	int atual = 1, cont = 1;
	while (canhota[atual][1]) {
		atual = canhota[atual][1];
		cont++;
	}
	
	return cont;
}

int calculaCentralDestra() {
	int atual = 1, cont = 1;
	while (destra[atual][0]) {
		atual = destra[atual][0];
		cont++;
	}
	
	return cont;
}

int calculaLadoCanhota() {
	int cont, maximo = 0, atual = 1;
	while (canhota[atual][0]) {
		int filho = canhota[atual][0];
		cont = 1;
		while (canhota[filho][1]) {
			filho = canhota[filho][1];
			cont++;
		}
		maximo = max(maximo, cont);
		atual = canhota[atual][1];
		if (atual == 0) break;
	}
	
	return maximo;
}

int calculaLadoDestra() {
	int cont, maximo = 0, atual = 1;
	while (destra[atual][1]) {
		int filho = destra[atual][1];
		cont = 1;
		while (destra[filho][0]) {
			filho = destra[filho][0];
			cont++;
		}
		maximo = max(maximo, cont);
		atual = destra[atual][0];
		if (atual == 0) break;
	}
	
	return maximo;
}

int main () {
	int n, total = 0;
	scanf("%d", &n);
	total += n;
	for (int j = 0; j < n; j++) {
		int i, l, k;
		scanf("%d %d %d", &i, &l, &k);
		canhota[i].push_back(l);
		canhota[i].push_back(k);
	}
	
	scanf("%d", &n);
	total += n;
	for (int j = 0; j < n; j++) {
		int i, l, k;
		scanf("%d %d %d", &i, &l, &k);
		destra[i].push_back(l);
		destra[i].push_back(k);
	}
	
	int centralCanhota = calculaCentralCanhota();
	int centralDestra = calculaCentralDestra();
	int ladoCanhota = calculaLadoCanhota();
	int ladoDestra = calculaLadoDestra();

	printf("%d\n", total - max(max(min(centralCanhota, ladoDestra), min(centralDestra, ladoCanhota)), min(centralCanhota, centralDestra)));
	
	return 0;
}
